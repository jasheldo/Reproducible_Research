head(tidy_data)
head(tidy_data_self)
rm(tidy_data)
tidy_data <- read.table("./data/tidy.txt")
head(tidy_data)
rm(tidy_data)
tidy_data <- read.table("./data/final_data.txt")
head(tidy_data)
rm(tidy_data)
tidy_data <- read.table("./data/tidy_data_new.txt")
head(tidy_data)
q()
install.packages(c("BH", "DBI", "git2r", "jsonlite", "nlme", "survival"))
library(datasets)
hist(airquality$Ozone)
with(airquality, plot(Wind, Ozone, main = "Ozone and Wind in New York City", pch = 20))
model \<- lm(Ozone \~ Wind, airquality)
model <- lm(Ozone ~ Wind, airquality)
abline(model, lwd = 2)
q()
x <0 rnorm(100)
x <- rnorm(100)
hist(x)
y <- rnorm(100)
plot(x,y)
z <- rnorm(100)
plot(x,z)
plot(x,y)
par(mar = c(2,2,2,2))
plot(x,y)
par(mar = c(4,4,2,2))
plot(x,y)
plot(x,y,pch = 20)
plot(x,y,pch = 19)
plot(x,y,pch = 2)
plot(x,y,pch = 3)
plot(x,y,pch = 4)
example("points")
plot(x,y,pch = 20)
x <- rnorm(100)
y <- rnorm(100)
plot(x,y,pch=20)
title("Scatterplot")
text(-2,-2,"Label")
legend("topleft", legend = "Data")
legend("topleft", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit)
abline(fit, lwd = 3)
abline(fit, lwd = 3, col = "blue")
plot(x,y,xlab = "Weight", ylab = "Height", main = "Scatterplot", pch = 20)
legend("topright", legend = "Data", pch = 20)
fit <- lm(y ~ x)
abline(fit, lwd = 3, col = "red")
z <- rpois(100,2)
par(mfrow=c(2,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mar = c(2,2,1,1))
plot(x,y,pch=20)
plot(x,z,pch=19)
par(mfrow = c(1,1))
x <- rnorm(100)
y<- x + rnorm(100)
g <- gl(2,50,labels = c("male","female"))
srt(g)
str(g)
plot(x,y)
plot(x,y, type = "n")
points(x[g=="male"],y[g=="male"], col = "green")
points(x[g=="female"],y[g=="female"], col = "blue")
points(x[g=="female"],y[g=="female"], col = "blue", pch = 19)
q()
libaray(swirl)
libray(swirl)
libray("swirl")
library(swirl)
swirl()
install_from_swirl("Exploratory_Data_Analysis")
swirl()
head(pollution)
dim(pollution)
summary(pollution$pm25)
quantile(ppm)
boxplot(ppm, col = "blue")
abline(h = 12)
hist(ppm, col = "green")
rug(ppm)
low
high
hist(ppm, col = "green", breaks = 100)
rug(ppm)
hist(ppm, col = "green")
abline(v = 12, lwd = 2)
abline(v = median(ppm), col = "magenta, lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
abline(v = median(ppm), col = "magenta", lwd = 4)
names(pollution)
table(pollution$region)
reg <- table(pollution$region)
reg
barplot(reg, col = "wheat", main = "Number of Counties in Each Region")
boxplot(pm25 ~ region, data = pollution, col = "red")
par(mfrow = c(2,1), mar = c(4,4,2,1))
east <- subset(pollution, region == "east")
head(east)
hist(east$pm25, col = "green")
hist(subset(pollution, region == "west")$pm25, col = "green")
with(pollution, plot(latitude, pm25))
abline(h = 12, lwd = 2, lty = 2)
plot(pollution$latitude, pollution$pm25, col = pollution$region)
plot(pollution$latitude, ppm, col = pollution$region)
abline(h = 12, lwd = 2, lty = 2)
par(mfrow = c(1,2), mar = c(5,4,2,1))
west <- subset(pollution, region == "west")
plot(west$latitude, west$pm25, main = "West")
plot(east$latitude, west$pm25, main = "East")
plot(east$latitude, east$pm25, main = "East")
?Devices
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
pdf(file = "myplot.pdf")
with(faithful, plot(eruptions, waiting))
title("Old Faithful Geyser data")
dev.cur()
dev.off()
dev.cur()
with(faithful, plot(eruptions, waiting))
title(main = "Old Faithful Geyser data")
dev.copy(png, file = "geyserplot.png")
dev.off()
head(cars)
with(cars, plot(speed, dist))
text(mean(cars$speed), max(cars$dist), "SWIRL rules!")
head(state)
table(state$region)
xyplot(Life.Exp ~ Income | region, data = state, layout = c(4,1))
xyplot(Life.Exp ~ Income | region, data = state, layout = c(2,2))
head(mpg)
dim(mpg)
table(mpg$model)
qplot(displ, hwy, data = mpg)
head(airquality)
range(airquality$Ozone, na.rm = TRUE)
hist(airquality$Ozone)
table(airquality$Month)
boxplot(Ozone ~ Month, airquality)
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lba = "red")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red")
main("Ozone and Wind in New York City")
boxplot(Ozone ~ Month, airquality, xlab = "Month", ylab = "Ozone (ppb)", col.axis = "blue", col.lab = "red", main = "Ozone and Wind in New York City")
title(main="Ozone and Wind in New York City")
with( airquality, plot(Wind, Ozone))
title(main = "Ozone and Wind in New York City")
length(par())
names(par())
par()$pin
par("fg")
par("pch")
par("lty")
plot(airquality$Wind, airquality$Ozone, set = "n")
plot(airquality$Wind, airquality$Ozone)
plot(airquality$Wind, type = "n", airquality$Ozone)
title(main = "Wind an dOzone in NYC")
title(main = "Wind and Ozone in NYC")
may <- subset(airquality$Month)[5]
may <- subset(airquality, Month == "May")
may <- subset(airquality, Month == 5)
points(may, )
points(may$Wind, may$Ozone, col="blue", pch=17)
notmay <- subset(airquality, Month != 5)
points(notmay$Wind, notmay$Ozone, col="red", pch=8)
legend
legend("topright",pch=c(17,8),col=c("blue","red"),legend=c("May","Other Months"))
abline(v = median(airquality$Wind), lty = 2, lwd = 2)
par(mfrow = c(1,2))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
par(mfrow = c(1,3), mar = c(4,4,2,1,), oma = c(0,0,2,0))
par(mfrow = c(1,3), mar = c(4,4,2,1), oma = c(0,0,2,0))
plot(airquality$Wind, airquality$Ozone, main = "Ozone and Wind")
plot(airquality$Ozone, airquality$Solar.R, main = "Ozone and Solar Radiation")
plot(airquality$Solar.R, airquality$Ozone, main = "Ozone and Solar Radiation")
plot(airquality$Temp, airquality$Ozone, main = "Ozone and Temperature")
mtext("Ozone and Weather in New York City", outer = TRUE)
q
q()
q()
power <- read.csv("./data/household_power_consumtpion.txt", sep = ";")
getwd()
power <- read.csv("./data/household_power_consumption.txt", sep = ";")
head(power)
names(power)
power <- subset(power, power$Date == "1/2/2007" | power$Date == "2/2/2007")
head(power)
hist(power)
hist(power$Global_active_power)
class(power)
class(power$Global_active_power)
class(power$Date)
power$Date <- as.Date(power$Date,format = "%d/%m%Y")
power$Date <- as.Date(power$Date,format = "%d/%m/%Y")
class(power$Date)
power$Date
power$Date[1]
library("swirl")
swirl()
head(airquality)
xyplot(x ~ y, data = airquality)
xyplot(Ozone ~ wind, data = airquality)
xyplot(Ozone ~ Wind, data = airquality)
xyplot(Ozone ~ wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, col = "red", pch = 8, main = "Big Apple Data")
xyplot(Ozone ~ Wind, data = airquality, pch = 8, col = "red", main = "Big Apple Data")
xyplot(Ozone ~ Wind | as.factor(Month), data = airquality, layout = c(5,1))
xyplot(Ozone ~ Wind | Month, data = airquality, layout = c(5,1))
p <- xyplot(Ozone ~ Wind, data = airquality)
p
names(p)
mynames[myfull]
p[["formula"]]
p[["x.limits"]]
table(f)
xyplot(y ~ x | f, layout = c(2,1))
v1
v2
myedit("plot1.R")
myedit(plot1.R)
myedit("plot1.R")
myedit("plot1.R")
myedit("plot1.R", name = null)
myedit("plot1.R")
edit("plot1.R")
myedit("plot1.R")
?myedit
??myedit
q()
library(swril)
library(swirl)
swirl()
str(mpg)
qplot(displ, hwy, data = mpg)
qplot(displ, hwy, data = mpg, color = drv)
qplot(displ, hwy, data = mpg, color = drv, geom = c("point", "smooth"))
qplot(y = hwy, data = mpg, color = drv)
myhigh
qplot(drv, hwy, data = mpg, geom = "boxplot")
qplot(drv, hwy, data = mpg, geom = "boxplot", color = manufacturer)
qplot(hwy, data = mpg, fill = drv)
qplot(displ, hwy, data = mpg, facets = . ~ drv)
qplot(hwy, data = mpg, facets = drv ~ ., binwidth = 2)
qplot(displ, hwy, data = mpg, geom = c("point", "smooth"), facets = .~drv)
g <- ggplot(mpg, aes(displ, hwy))
summary(g)
g+geom_point()
g+geom_point()+geom_smooth()
g+geom_point()+geom_smooth(method = "lm")
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)
g+geom_point()+geom_smooth(method = "lm")+facet_grid(.~drv)+ggtitle("Swirl Rules!")
g+geom_point(color = "pink", size = 4, alpha = 1/2)
g+geom_point(size = 4, alpha = 1/2, aes(drv))
g+geom_point(size = 4, alpha = 1/2, aes(color = drv))
g+geom_point(aes(color = drv))+labs(title = "Swirl Rules!")+labs(x = "Displacement", y = "Hwy Mileage")
g+geom_point(colr = aes(drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(color = aes(drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(color = aes(drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv), size = 2, alpha = 1/2)+geom_smooth(size = 4, linetype = 3, method = "lm", se = FALSE)
g+geom_point(aes(color = drv))+theme_bw(base_family = "Times")
plot(myx, myy, type = "l", ylim=c(-3,3))
g <- ggplot(testdata,aes(x = myx, y = myy))
g <- ggplot(testdata,aes(myx, myy))
g <- ggplot(testdata,aes(x = "myx", y = "myy"))
g <- ggplot(testdata,aes(x = myx, y = myy))
g <- ggplot(testdat,aes(x = myx, y = myy))
g+geom_line()
g+geom_line(ylim(-3,3))
g+geom_line()+ylim(-3,3)
g+geom_line()+coord_cartesian((ylim = c(-3,3)))
g+geom_line()+coord_cartesian(ylim = c(-3,3))
g <- ggplot(mpg, aes(x = displ, y = hwy, color = factor(year)))
g+geom_point()
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")
g+geom_point()+facet_grid(drv~cyl, margins = TRUE)+geom_smooth(method = "lm", se = FALSE, size = 2, color = "black")+labs(x = "Displacement", y = "Highway Mileage", title = "Swirl Rules!")
str(diamonds)
hist(diamonds$price)
hist(price, data = diamonds)
qplot(price, data = diamonds)
range(diamonds$price)
qplot(price, data = diamonds, binwidth = 18497/30)
brk
counts
qplot(price, data = diamonds, binwidth = 18479/30, fill = cut)
qplot(price, data = diamonds, binwidth = 18497/30, fill = cut)
qplot(price, data = diamonds, geom = "density")
qplot(price, data = diamonds, geom = "density", color = cut)
qplot(carat, price, data = diamonds)
qplot(carat, price, data = diamonds, shape = cut)
qplot(carat, price, data = diamonds, shape = cut, color = cut)
qplot(carat, price, data = diamonds, color = cut)
qplot(carat, price, data = diamonds, color = cut, geom_smooth(method = "lm"))
qplot(carat, price, data = diamonds, color = cut, geom_smooth("lm"))
qplot(carat, price, data = diamonds, color = cut)+geom_smooth(method = 'lm')
qplot(carat, price, data = diamonds, color = cut, facets = .~cut)+geom_smooth(method = 'lm')
g <- ggplot(diamonds, aes(depth, price))
summary(g)
g+geom_point(alpha = 1/3)
cutpoints <- quantile(diamonds$carat, seq(0,1,length = 4), na.rm = TRUE)
cutpoints
diamonds$car2 <- cut(diamonds$carat, cutpoints)
g <- ggplot(diamonds, aes(depth, price))
g+geom_point(alpha = 1/3)+facet_grid(cut~car2)
diamonds[myd,]
g+geom_point(alpha = 1/3)+facet_grid(cut~car2)+geom_smooth
g+geom_point(alpha = 1/3)+facet_grid(cut~car2)+geom_smooth(method = "lm", size = 3, color = "pink")
ggplot(diamonds, aes(carat, price))+geom_boxplot()+facet_grid(.~cut)
2
q()
library(nlme)
library(lattice)
xyplot(weight ~ Time | Diet, BodyWeight)
library(datasets)
data(airquality)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
library(ggplot2)
qplot(Wind, Ozone, data = airquality, facets = . ~ factor(Month))
qplot(Wind, Ozone, data = airquality, geom = "smooth")
airquality = transform(airquality, Month = factor(Month))
qplot(Wind, Ozone, data = airquality, facets = . ~ Month)
q()
install.packages("Rcpp")
q()
library(swirl)
swirl()
swirl()
install.packages("fields")
swirl()
dim(pm0)
head(pm0)
cnames
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <- make.names(cnames[[1]][wcol])
pm0
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(x0,is.na(x0))
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0, x1)
boxplot(log10(x0), log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
swirl()
head(dates)
hist(dates)
hist(dates[negative], "month")
swirl()
q()
library(swirl)
Jim
swirl()
q()
library(swirl)
swirl()
swirl()
dim(pm0)
head(pm0)
names(cnames)
cnames
cnames <- strsplit(cnames, '|', fixed = TRUE)
cnames
names(pm0) <0- make.names(cnames[[1]][wcol])
names(pm0) <- make.names(cnames[[1]][wcol])
head(pm0)
x0 <- pm0$Sample.Value
str(x0)
mean(is.na(x0))
names(pm1) <- make.names(cnames[[1]][wcol])
dim(pm1)
x1 <- pm1$Sample.Value
mean(is.na(x1))
summary(x0)
summary(x1)
boxplot(x0,x1)
boxplot(log10(x0),log10(x1))
negative <- x1 < 0
sum(negative, na.rm = TRUE)
mean(negative, na.rm = TRUE)
dates <- pm1$Date
str(dates)
date <- as.Date(as.character(dates), "%Y%m%d")
dates <- as.Date(as.character(dates), "%Y%m%d")
head(dates)
hist(dates[negative], "month")
str(site0)
rm(date)
both <- intersect(site0, site1)
both
head(pm0)
cnt0 <- subset(pm0, pm0$State.Code == 36 & pm0$county.site == both)
cnt0 <- subset(pm0, State.Code == 36 & county.site %in% both)
cnt1 <- subset(pm1, State.Code == 36 & county.site %in% both)
sapply(split(cnt0, cnt0$county.site), nrow)
sapply(split(cnt1, cnt1$county.site), nrow)
pm0sub <- subset(cnt0, County.Code == 63 & Site.ID == 2008)
pm1sub <- subset(cnt1, County.Code == 63 & Site.ID == 2008)
x0sub <- pm0sub$Sample.Value
x1sub <- pm1sub$Sample.Value
dates0 <0 as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates0 <0 as.Date(as.character(pm0sub$Date, "%Y%m%d"))
dates0 <- as.Date(as.character(pm0sub$Date), "%Y%m%d")
dates1 <- as.Date(as.character(pm1sub$Date), "%Y%m%d")
par(mfrow = c(1,2), mar = c(4,4,2,1))
plot(dates0, x0sub, pch = 20)
abline(h = median(x0sub$pm25, na.rm = TRUE), lwd = 2)
abline(h = median(x0sub, na.rm = TRUE), lwd = 2)
plot(dates1, x1sub, pch = 20)
abline(h = median(x1sub, na.rm = TRUE), lwd = 2)
rng <- range(x0sub, x1sub, na.rm = TRUE)
rng
mn0 <- with(pm0, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn0)
mn1 <- with(pm1, tapply(Sample.Value, State.Code, mean, na.rm = TRUE))
str(mn1)
summary(mn0)
summary(mn1)
d0 <- data.frame(state = names(mn0), mean = mn0)
d1 <- data.frame(state = names(mn1), mean = mn1)
mrg <- merge(d0, d1, by = "state")
dim(mrg)
head(mrg)
with(mrg, plot(rep(1,52), mrg[,2], xlim = c(0.5,2.5)))
with(mrg, points(rep(2,52), mrg[,3]))
segments()
segments(mrg[,2], mrg[,3],)
segments(rep(1,52), rep(2,52),mrg[,2], mrg[,3])
segments(rep(1,52),mrg[,2],rep(2,52),mrg[,3])
mrg[mrg$mean.x < mrg$mean.y]
mrg[mrg$mean.x < mrg$mean.y,]
q()
download.packages("knitr")
install.packages("knitr")
library(knitr)
q()
setwd("C:/Users/jsheld01/Desktop")
setwd("~/GitHub/Reproducible_Research/Course Project 1")
library(ggplot2)
library(plyr)
library(dplyr)
activity <- read.table("./data/activity", header = TRUE, sep = ",", na.strings = "NA")
activity <- read.table("./data/activity.csv", header = TRUE, sep = ",", na.strings = "NA")
head(activity)
str(activity)
activity$date <- as.Date(as.character(activity$date),"%Y-%M-%D")
str(activity)
activity <- read.table("./data/activity.csv", header = TRUE, sep = ",", na.strings = "NA")
as.Date(activity[,2], format = "%Y-%M-%D")
activity <- read.table("./data/activity.csv", header = TRUE, sep = ",", na.strings = "NA")
as.Date(activity[,2], format = "%M/%d/%Y")
activity <- read.table("./data/activity.csv", header = TRUE, sep = ",", na.strings = "NA")
summarise(activity)
str(activity)
names(activity)
mean(is.na(activity))
summary(activity)
summary(activity, rm.na = TRUE)
summary(activity, na.omit(activity))
summary(activity, na.rm = TRUE)
knitr::opts_chunk$set(echo = TRUE)
library(ggplot2)
library(dplyr)
dailysumm <- group_by(activity, date)
dailysumm <- summarize(group_by(activity, date), sum(steps))
dailysumm
dailysumm <- summarize(group_by(activity, date), sum(steps, na.rm = TRUE))
dailysumm
dailysumm <- summarize(group_by(activity, date), steps = sum(steps, na.rm = TRUE))
dailysumm
qplot(dailysumm, geom = "histogram")
qplot(dailysumm$steps, geom = "histogram")
qplot(steps, data = dialysumm, geom = "histogram")
qplot(steps, data = dailysumm, geom = "histogram")
qplot(steps, data = dailysumm, geom = "histogram")
qplot(steps, data = dailysumm, geom = "barplot")
dailysumm <- summarize(group_by(activity, date), total.steps = sum(steps, na.rm = TRUE), mean.steps = mean(steps, na.rm = TRUE))
dailysumm
qplot(mean.steps, data = dailysumm, geom = "histogram", color = date)
qplot(total.steps, data = dailysumm, geom = "histogram", color = date)
qplot(total.steps, data = dailysumm, geom = "histogram", color = date)+ggtheme(theme_bw)
qplot(total.steps, data = dailysumm, geom = "histogram", color = date, ggtheme = theme_bw)
qplot(total.steps, data = dailysumm, geom = "histogram", color = date)+theme_bw()
qplot(mean.steps, data = dailysumm, geom = "histogram", color = date) + theme_bw() + xlab("Total Steps")+ylab("Frequency") + ggtitle("Daily Step Total Histogram")
summary(activity, na.rm = TRUE)
summary(dailysumm)
qplot(total.steps, data = dailysumm, geom = "histogram", color = date) + theme_bw() + xlab("Total Steps")+ylab("Frequency") + ggtitle("Daily Step Total Histogram")
qplot(total.steps, data = dailysumm, geom = "histogram", color = date, binwidth = 60) + theme_bw() + xlab("Total Steps")+ylab("Frequency") + ggtitle("Daily Step Total Histogram")
qplot(total.steps, data = dailysumm, geom = "histogram", color = date, binwidth = 40) + theme_bw() + xlab("Total Steps")+ylab("Frequency") + ggtitle("Daily Step Total Histogram")
qplot(total.steps, data = dailysumm, geom = "histogram", color = date, binwidth = 20) + theme_bw() + xlab("Total Steps")+ylab("Frequency") + ggtitle("Daily Step Total Histogram")
q()
